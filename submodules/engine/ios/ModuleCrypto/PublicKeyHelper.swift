//
//  PublicKeyHelper.swift
//  Common
//
//  Created by Sergio Osiro Bergmann on 22/07/19.
//  Copyright Â© 2019 Banco Original. All rights reserved.
//

import Foundation

public class PublicKeyHelper {
    private static var compositeHomol: [[UInt8]] {
        var composite: [[UInt8]] = [[UInt8]]()
        composite.append([100,81,78,51,82,76,69,88,57,108,77,79,114,119,87,115,56,82,121,111,111,72,89,115,67,97,88,99,53,83,77,113,79,82,48,48,85,107,87,68,74,116,50,75,116,114,121,97,67,72,69,113,121,73,74,107,106,107,84,79,87,88,115,52,102,112,82,53,57,54,113,73,50,43,89,79,120,121,102,86,84,84,109,52,48,80,107,97,106,121,43,80,71,57,76,71,114,73,86,73,119,54,86,90,54,66,53,111,88,75,82,113,74,113,83,80,122,50,50,117,71,56,67,48,73,119,117,110,121,72,122,54,90,48,100,83,110,71,112,88,75,87,76,81,86,69,55,65,84,55,51,107,70,84,75,118,77,54,51,56,102,77,66,118,108,81,47,78,82,76,99,84,68,55,70,83,100,71,79,109,98,74,48,88,55,109,102,88,87,55,119,51,104,67,89,77,100,110,118,50,116,115,108,122,71,109,88,47,53,72,107,52,84,102,84,43,85,55,69,77,65,116,98,69,53,43,53,112,116,119,51,112,47,116,69,73,86,70,77,117,49,77,121,54,121,113,69,118,107,76,106,76,72,54,56,89,52,69,70,66,106,116,117,81,121,103,80,74,115,84,65,54,55,111,115,51,75,122,87,114,70,53,111,84,109,55,72,89,122,113,122,50,109,110,72,56,116,87,104,121,73,109,76,113,69,90,121,120,111,118,68,43,86,49,74,106,97,72,90,107,48,118,56,104,47,82,49,75,114,99,108,78,76,76,97,73,90,111,53,100,86,111,85,99,74,116,114,120,106,85,65,85,66,109,104,74,43,74,109,113,73,86,107,50,104,85,79,97,108,116,98,49,70,105,76,48,101,99,51,104,51,50,114,48,114,67,97,118,75,89,72,109,105,104,98,57,90,54,107,51,106,115,89,69,77,76,77,54,79,120,51,80,90,71,57,72,68,88,97,53,87,104,57,76,76,105,77,84,75,109,77,117,73,73,118,97,50,110,69,122,120,121,90,102,74,53,80,52,72,68,82,105,120,114,115,108,67,65,47,78,112,78,52,47,115,121,66,122,82,66,103,110,119,49,43,117,102,88,65,83,103,55,103,98,70,106,121,87,121,115,69,53,104,102,48,82,49,51,113,53,79,119,82,86,98,116,120,116,68,71,117,119,77,103,103,107,102,110,54,49,113,111,89,61])
        composite.append([79,69,111,43,66,118,104,57,116,120,49,77,121,71,55,100,109,88,102,66,53,48,57,98,79,101,101,100,116,71,90,115,101,70,120,55,69,81,84,83,72,112,122,72,47,47,88,89,83,120,90,104,105,56,77,49,121,119,87,107,75,67,57,101,79,54,65,74,119,56,118,43,116,54,57,77,104,85,117,54,72,104,98,77,113,76,74,86,119,110,55,97,81,117,101,117,121,57,77,76,104,56,112,121,113,49,73,110,69,99,99,117,82,43,122,76,108,104,87,66,84,90,109,71,70,107,47,65,53,122,47,77,65,121,90,109,47,103,77,110,97,108,97,70,77,65,97,90,80,56,101,65,73,108,118,74,66,99,118,75,74,102,89,97,43,68,121,109,100,78,112,105,81,73,103,49,66,119,43,101,67,102,74,57,51,66,98,106,68,80,90,106,119,110,66,67,66,83,118,72,50,75,119,48,97,82,71,73,118,86,89,74,75,53,71,109,74,47,103,53,99,55,83,115,111,113,78,71,57,88,43,90,115,54,104,67,69,119,111,102,109,89,84,117,113,53,86,109,48,57,83,97,84,102,49,111,112,119,112,113,111,97,76,121,103,108,67,106,48,65,100,77,113,115,112,68,84,69,51,107,86,80,78,85,43,115,97,98,110,99,54,101,114,122,43,54,104,104,107,71,89,65,43,106,88,54,105,97,107,74,75,73,78,83,65,118,68,122,77,121,111,74,82,84,105,72,52,104,57,52,119,49,66,43,80,90,68,116,107,115,80,115,53,97,97,74,75,55,120,103,86,72,84,121,100,54,113,57,47,119,83,65,119,68,49,119,68,120,52,53,72,78,82,48,101,109,80,76,50,71,53,119,101,65,52,107,106,78,72,116,101,119,117,86,83,78,88,53,53,67,122,89,116,72,81,56,100,111,67,105,43,90,80,105,119,112,97,121,101,65,70,85,115,52,98,70,116,105,82,105,100,48,99,114,117,67,116,104,49,82,110,86,53,118,99,100,109,65,82,82,56,49,113,47,89,85,79,85,51,54,48,98,108,97,50,49,103,85,65,105,66,73,111,71,118,70,70,48,74,105,121,78,119,119,99,72,84,85,107,74,78,76,55,56,120,54,43,65,51,77,65,50,69,108,72,54,85,72,82,103,101,71,87,88,57,116,79,106,47,107,54,56,81,61])
        return composite
    }
    
    public static var keyHomol: String
    {
        let xorParts0 = [UInt8](Data(base64Encoded: String(bytes: compositeHomol[0], encoding: String.Encoding.utf8)!)!)
        let xorParts1 = [UInt8](Data(base64Encoded: String(bytes: compositeHomol[1], encoding: String.Encoding.utf8)!)!)

        var xorKey = [UInt8]()
        for (i, _) in xorParts1.enumerated() {
            xorKey.append(xorParts0[i] ^ xorParts1[i])
        }
        return String(bytes: xorKey, encoding: String.Encoding.utf8)!
    }
    
    private static var compositeProd: [[UInt8]] {
        var composite: [[UInt8]] = [[UInt8]]()
        composite.append([52,109,108,118,78,82,108,85,84,71,109,85,81,75,105,82,90,86,75,54,79,54,121,55,106,66,67,110,56,78,122,102,120,87,118,88,65,110,81,66,49,99,50,116,88,110,54,75,104,111,121,116,104,71,78,67,108,57,69,98,65,76,49,52,114,103,68,74,112,68,106,69,79,83,80,57,121,65,57,75,101,70,100,115,106,103,76,73,83,86,52,87,79,83,121,87,121,78,84,98,71,79,105,54,90,109,75,98,112,73,86,109,83,118,115,50,118,122,102,85,90,97,107,76,66,111,117,68,88,115,113,102,73,55,50,57,77,82,120,79,52,66,49,80,109,100,98,107,87,65,54,53,122,88,117,76,49,49,118,53,105,100,89,106,81,107,110,113,97,65,71,68,85,98,105,89,113,54,70,57,107,118,108,71,106,57,75,100,76,71,54,99,111,103,43,80,55,43,103,105,50,103,109,81,112,79,97,51,81,73,110,122,89,90,69,120,49,81,67,115,76,55,113,53,83,116,81,88,85,71,57,81,68,69,105,68,119,108,119,97,73,122,118,72,97,122,85,100,89,87,81,106,51,65,65,119,100,89,101,87,100,100,104,87,113,83,74,47,43,56,50,48,114,101,55,88,104,81,90,69,67,105,104,122,50,107,80,53,77,113,86,100,52,69,103,73,84,51,105,83,88,77,73,101,113,117,98,43,106,52,108,65,84,68,83,81,75,83,55,106,83,114,116,52,83,87,116,107,78,121,107,89,121,114,100,98,87,67,81,56,87,80,82,47,73,105,83,97,86,49,83,97,114,49,50,86,70,57,83,49,52,51,74,118,48,52,110,51,67,87,54,103,49,54,77,53,90,84,53,68,43,122,115,87,121,114,72,107,48,106,108,67,76,105,69,109,74,52,65,118,103,88,80,83,106,43,119,119,50,79,49,83,119,101,80,48,116,81,81,113,108,57,52,80,49,118,83,99,83,68,97,47,89,86,82,101,90,49,65,110,78,119,119,101,43,103,54,75,74,110,120,48,83,53,104,75,118,77,100,55,49,121,65,86,108,107,69,101,113,72,114,98,90,47,81,117,76,107,81,103,43,112,97,51,81,83,50,48,84,106,76,82,122,121,52,52,111,88,106,120,67,50,75,55,75,52,48,85,72,111,78,72,115,116,48,105,53,115,115,48,55,78,115,61])
        composite.append([114,121,65,109,100,49,65,43,68,83,102,87,74,56,80,103,68,84,110,84,102,74,88,77,118,70,76,109,111,90,109,90,104,67,113,89,81,84,86,81,55,89,122,103,70,122,102,73,120,101,118,109,120,121,73,84,48,112,66,122,99,53,73,119,47,48,102,52,107,65,113,110,84,69,54,74,111,84,52,65,76,122,85,107,51,50,105,110,65,120,107,103,83,104,106,86,115,98,71,85,100,111,47,52,68,83,67,114,53,55,69,69,102,73,108,80,122,85,67,102,76,116,53,122,89,115,110,50,77,54,102,116,83,111,47,43,89,88,70,53,111,49,103,76,52,55,101,104,78,49,121,83,111,67,72,107,111,122,105,55,122,101,86,118,65,82,54,111,68,70,72,82,78,99,122,117,50,99,77,122,119,74,115,47,47,75,106,97,65,121,68,115,107,109,84,73,51,75,82,75,108,87,98,70,48,113,68,67,100,116,121,107,83,113,74,71,111,50,43,99,72,117,47,103,90,90,111,106,66,48,66,112,90,120,54,120,104,83,48,116,90,72,47,120,72,109,90,47,86,108,90,104,118,88,89,74,82,116,97,109,73,73,52,98,122,50,90,74,109,76,102,66,51,52,113,118,116,83,48,88,88,87,119,119,114,119,47,76,99,101,89,53,107,105,90,43,80,119,122,57,72,52,53,115,48,113,55,77,117,101,77,81,101,108,43,109,81,71,43,78,80,102,107,117,99,67,100,99,102,87,78,119,110,116,65,112,68,69,99,73,69,97,81,79,87,71,51,100,74,68,118,51,52,120,87,108,98,111,83,67,112,48,89,49,103,57,117,79,89,104,106,118,107,47,74,85,66,109,111,84,107,87,49,69,113,57,117,43,54,103,119,88,84,48,49,122,82,99,48,90,43,68,72,109,120,97,85,66,107,54,99,56,104,113,98,102,119,48,53,102,43,73,100,69,110,113,55,77,79,108,121,75,66,121,52,120,84,65,104,66,82,121,100,100,49,88,51,76,99,66,115,99,102,114,99,73,49,80,100,74,110,48,108,53,52,66,78,69,43,82,54,83,66,98,100,100,90,72,82,111,106,57,67,71,73,110,109,68,79,51,121,103,104,72,52,76,49,68,79,55,79,122,118,106,82,78,112,87,86,77,81,103,53,52,120,114,111,111,112,108,114,90,107,61])
        return composite
    }
    
    public static var keyProd: String
    {
        let xorParts0 = [UInt8](Data(base64Encoded: String(bytes: compositeProd[0], encoding: String.Encoding.utf8)!)!)
        let xorParts1 = [UInt8](Data(base64Encoded: String(bytes: compositeProd[1], encoding: String.Encoding.utf8)!)!)

        var xorKey = [UInt8]()
        for (i, _) in xorParts1.enumerated() {
            xorKey.append(xorParts0[i] ^ xorParts1[i])
        }
        return String(bytes: xorKey, encoding: String.Encoding.utf8)!
    }
    
    private static func generateKeyXorParts(key: String) -> [[UInt8]?] {
        var keyParts: [[UInt8]?] = [[UInt8]]()
    
        var xorRandom = [UInt8]()
        var xorMatch = [UInt8]()
        var keyBytes = key.bytes
        for (i, _) in keyBytes.enumerated() {
            xorRandom.append((UInt8)(256 * Double.random(in: 0..<1)))
            xorMatch.append(xorRandom[i] ^ keyBytes[i])
        }
        keyParts.append(xorRandom.toBase64().bytes)
        keyParts.append(xorMatch.toBase64().bytes)
    
        return keyParts
    }
}
